export const data = JSON.parse("{\"key\":\"v-0cf9168e\",\"path\":\"/posts/QObject%E5%AF%B9%E8%B1%A1%EF%BC%88The%20QObject%EF%BC%89.html\",\"title\":\"QObject对象（The QObject）\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"edit\",\"date\":\"2023-09-09T00:00:00.000Z\",\"category\":[\"Qt\"]},\"headers\":[],\"git\":{\"createdTime\":1702122741000,\"updatedTime\":1702122741000,\"contributors\":[{\"name\":\"Zhao Guo Hao\",\"email\":\"1121234199@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":2.24,\"words\":671},\"localizedDate\":\"2023年9月9日\",\"filePathRelative\":\"posts/QObject对象（The QObject）.md\",\"excerpt\":\"<h1> QObject对象（The QObject）</h1>\\n<p>正如介绍中描述的，<code>QObject</code>是Qt的内省机制。在Qt中它几乎是所有类的基类。值类型除外，例如<code>QColor</code>，<code>QString</code>和<code>QList</code>。</p>\\n<p>Qt对象是一个标准的C++对象，但是它具有更多的功能。可以从两个方向来深入探讨：内省和内存管理。内省意味着Qt对象知道它的类名，它与其它类的关系，以及它的方法和属性。内存管理意味着每个Qt对象都可以成为是其它子对象的父对象。父对象拥有子对象，当父对象销毁时，它也会负责销毁它的子对象。</p>\"}")

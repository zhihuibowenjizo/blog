export const pagesRoutes = [
  ["v-184f4da6","/intro.html",{"y":"a","d":"2022-12-11T05:45:09.000Z","e":"<h1> 介绍页</h1>\n<p>空空如也</p>\n","r":{"minutes":0.03,"words":9},"title":"介绍页","i":"info"},["/intro","/intro.md"]],
  ["v-8daa1a0e","/",{"y":"h","d":"2022-12-11T05:45:09.000Z","e":"<!-- 这是一个博客主页的案例。\n\n要使用此布局，你应该在页面前端设置 `layout: Blog` 和 `home: true`。\n\n相关配置文档请见 [博客主页](https://vuepress-theme-hope.github.io/v2/zh/guide/blog/home/)。 -->\n","r":{"minutes":0.72,"words":215},"title":"博客主页","i":"home"},["/index.html","/README.md"]],
  ["v-2e3eac9e","/slides.html",{"y":"s","d":"2022-12-11T05:45:09.000Z","e":"<!-- markdownlint-disable MD024 MD033 MD051 -->\n","r":{"minutes":4.51,"words":1354},"title":"幻灯片页","i":"slides"},["/slides","/slides.md"]],
  ["v-4e65ec78","/demo/disable.html",{"y":"a","d":"2022-12-11T05:45:09.000Z","c":["使用指南"],"g":["禁用"],"e":"<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n","r":{"minutes":0.42,"words":127},"title":"布局与功能禁用","i":"config"},["/demo/disable","/demo/disable.md"]],
  ["v-c151bf32","/demo/encrypt.html",{"y":"a","d":"2022-12-11T05:45:09.000Z","c":["使用指南"],"g":["文章加密"],"n":true,"r":{"minutes":0.52,"words":156},"title":"密码加密的文章","i":"lock"},["/demo/encrypt","/demo/encrypt.md"]],
  ["v-438ffe52","/demo/markdown.html",{"y":"a","d":"2022-12-11T05:45:09.000Z","c":["使用指南"],"g":["Markdown"],"e":"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n","r":{"minutes":3.87,"words":1161},"title":"Markdown 展示","i":"markdown"},["/demo/markdown","/demo/markdown.md"]],
  ["v-6e19edb7","/demo/page.html",{"y":"a","a":"Ms.Hope","d":"2020-01-01T00:00:00.000Z","l":"2020年1月1日","c":["使用指南"],"g":["页面配置","使用指南"],"e":"<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n","r":{"minutes":1.58,"words":475},"title":"页面配置","i":"page"},["/demo/page","/demo/page.md"]],
  ["v-1473bf53","/demo/",{"y":"a","d":"2022-12-11T05:45:09.000Z","c":["使用指南"],"e":"<h2> 目录</h2>\n<ul>\n<li>\n<p><a href=\"/demo/markdown.html\" target=\"blank\">Markdown 展示</a></p>\n</li>\n<li>\n<p><a href=\"/demo/page.html\" target=\"blank\">页面展示</a></p>\n</li>\n<li>\n<p><a href=\"/demo/disable.html\" target=\"blank\">禁用展示</a></p>\n</li>\n<li>\n<p><a href=\"/demo/encrypt.html\" target=\"blank\">加密展示</a></p>\n</li>\n</ul>","r":{"minutes":0.13,"words":40},"title":"主要功能与配置演示","i":"discover"},["/demo/index.html","/demo/README.md"]],
  ["v-771b6871","/posts/c__%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4.html",{"y":"a","d":"2023-07-03T00:00:00.000Z","l":"2023年7月3日","c":["c"],"e":"<h1> C++ 命名空间</h1>\n<p>C++中的命名空间是一种将变量、函数和类等符号封装起来的机制，用来避免同一个程序中不同部分的代码名称冲突。它可以被看作是一种组织代码的方式，可以将相关的代码放在同一个命名空间下，方便管理和使用。</p>\n<p>一个命名空间是由关键字 <code>namespace</code> 后跟命名空间名称和花括号扩起来的一系列声明组成的。例如：</p>\n<div class=\"language-cpp line-numbers-mode\" data-ext=\"cpp\"><pre class=\"language-cpp\"><code><span class=\"token keyword\">namespace</span> MyNamespace <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> myVar<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">myFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":1.18,"words":353},"title":"C++ 命名空间","i":"edit"},["/posts/c__命名空间.html","/posts/c__%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4","/posts/c++命名空间.html","/posts/c++%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4.html","/posts/c++命名空间.md","/posts/c++%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4.md"]],
  ["v-6a353f00","/posts/CMake%20%E7%AC%94%E8%AE%B0.html",{"y":"a","d":"2023-06-19T00:00:00.000Z","l":"2023年6月19日","c":["c"],"g":["cmake"],"e":"<h1> CMake 笔记</h1>\n<h2> CMake 概述</h2>\n<p>CMake 是一个项目构建工具，并且是跨平台的。\n源文件（.c .cpp） 想要变成可执行程序需要编译器处理\n所谓编译器其实是一套工具链\n第一部分 预处理器 (替换宏、去注释)\n第二部分 编译 （通过gcc 等 生成 汇编文件）\n第三部分 汇编  （通过汇编器处理完的就是二进制文件了，win 为  .obj 在 Linux 为 .o）\n第四部分 链接  （把所有二进制文件进行链接，链接成一个二进制可执行文件）\n如果项目文件比较多，进行打包操作时命令会非常长 ，不方便，</p>\n<p>于是就可以写一个makefile脚本文件,在里面写一些指令来告诉编译器如何编译这些源文件，写好文件后要实行一个批处理命令 make ,然后程序就会根据makefile 里的要求把东西编译出来了</p>","r":{"minutes":4,"words":1201},"title":"CMake 笔记","i":"edit"},["/posts/CMake 笔记.html","/posts/CMake%20%E7%AC%94%E8%AE%B0","/posts/CMake 笔记.md","/posts/CMake%20%E7%AC%94%E8%AE%B0.md"]],
  ["v-71af98a4","/posts/docker.html",{"y":"a","d":"2023-08-03T00:00:00.000Z","l":"2023年8月3日","c":["网络"],"g":["冲突域","广播域"],"e":"<h1> docker</h1>\n<h2> docker 参数解释</h2>\n<p>-i 交互式命令操作\n-t 开启预估终端</p>\n<p>-d 后台运行</p>\n<p>--rm 容器挂掉后自动被删除</p>\n<p>--name 给容器起名字</p>\n<p>指定端口映射 -p  宿主机端口:容器端口</p>\n<p>随机端口映射  -P    随机使用宿主机没有使用的端口映射容器使用的端口</p>\n<h2> docker 切换不同的发行版</h2>\n<p>使用docker ，可以切换不同的发行版，但是linux内核 使用的 都是宿主机内核</p>\n<h2> docker 镜像定义</h2>\n<p>docker 镜像不包含linux内核，和宿主机公用\ndocker 镜像想运行，最基础的需要一个发行版平台，再来安装我们想要的依赖环境!</p>","r":{"minutes":1.74,"words":521},"title":"docker","i":"edit"},["/posts/docker","/posts/docker.md"]],
  ["v-2cddf184","/posts/esp8266%E4%B8%80%E5%AF%B9%E4%B8%80%E9%80%9A%E4%BF%A1.html",{"y":"a","d":"2023-04-09T00:00:00.000Z","l":"2023年4月9日","c":["esp8266"],"e":"<h1> esp8266 一对一通信</h1>\n<p>一、将模块一配置为AP模式作为服务器\n通过串口助手依次发送指令如下:</p>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>AT+CWMODE=2 \nAT+RST\nAT+CWSAP=\"ssid\",\"pw\",6,4\nAT+CIPMUX=1\nAT+CIPSERVER=1,333\nAT+CIFSR\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.83,"words":250},"title":"esp8266 一对一通信","i":"edit"},["/posts/esp8266一对一通信.html","/posts/esp8266%E4%B8%80%E5%AF%B9%E4%B8%80%E9%80%9A%E4%BF%A1","/posts/esp8266一对一通信.md","/posts/esp8266%E4%B8%80%E5%AF%B9%E4%B8%80%E9%80%9A%E4%BF%A1.md"]],
  ["v-c5e5db88","/posts/git.html",{"y":"a","d":"2022-12-07T00:00:00.000Z","l":"2022年12月7日","c":["管理工具"],"g":["git"],"e":"<h1> git</h1>\n<h2> git的概念</h2>\n<p>Git 是一个版本控制系统，是任何软件开发项目中的主要内容。通常有两个主要用途：代码备份和代码版本控制。你可以逐步处理代码，在需要回滚到备份副本的过程中保存每一步的进度！</p>\n<h2> git配置</h2>\n<p>可以保存 Git 用户名和电子邮件，这样就不必在以后的 Git 命令中再次输入它们。<br>\n在命令行中配置本地仓库的账号和邮箱：</p>\n<div class=\"language-git line-numbers-mode\" data-ext=\"git\"><pre class=\"language-git\"><code><span class=\"token command\">$ git config<span class=\"token parameter\"> --global</span> user.name </span><span class=\"token string\">\"wupx\"</span>  \n<span class=\"token command\">$ git config<span class=\"token parameter\"> --global</span> user.email </span><span class=\"token string\">\"wupx@qq.com\"</span>  \n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.53,"words":158},"title":"git","i":"edit"},["/posts/git","/posts/git.md"]],
  ["v-d8e090fa","/posts/https.html",{"y":"a","d":"2022-12-08T00:00:00.000Z","l":"2022年12月8日","c":["网络"],"g":["https","协议"],"o":true,"e":"<h1> HTTPS加密原理</h1>\n<h2> 为什么要加密</h2>\n<blockquote>\n<p>因为http的内容是明文传输的，明文数据会经过中间代理服务器、路由器、wifi热点、通信服务运营商等多个物理节点，如果信息在传输过程中被劫持，传输的内容就完全暴露了。劫持者还可以篡改传输的信息且不被双方察觉，这就是中间人攻击。所以我们才需要对信息进行加密。</p>\n</blockquote>\n<h2> 对称加密</h2>\n<blockquote>\n<p>简单说就是有一个密钥，它可以加密一段信息，也可以对加密后的信息进行解密，和我们日常生活中用的钥匙作用差不多。在服务器与客户端通信前，服务端会把密钥传给客户端，之后双方用密钥加密通信</p>\n</blockquote>","r":{"minutes":6.1,"words":1831},"title":"HTTPS加密原理","i":"edit"},["/posts/https","/posts/https.md"]],
  ["v-64ddefca","/posts/nw.html",{"y":"a","d":"2022-12-09T00:00:00.000Z","l":"2022年12月9日","c":["网络设备"],"g":["网关","网桥","交换机"],"e":"<h1> 网络设备</h1>\n<h2> 网关</h2>\n<p>网关是一个大概念，不具体特指一类产品，只要连接两个不同的网络的设备都可以叫网关；而‘路由器’么一般特指能够实现路由寻找和转发的特定类产品，路由器很显然能够实现网关的功能。换句话说，路由器可以实现网关的功能，但是路由器功能不仅仅是实现网关；网关可以由路由器实现，但是也不仅仅是由路由器实现。与网桥只是简单地传达信息不同，当信息到达网关以后，网关要对信息重新进行加工，以适应目的系统的需求。</p>\n<h2> 网桥、交换机</h2>\n<p>网桥又称桥接器，英文名Network Bridge，数据链路层设备。网桥却能看懂一些帧的信息。在以太网构造的局域网上，最终的寻址是以数据链路层的MAC地址作为标识的(就是用MAC地址可以在局域网上找到一台唯一的机器)，网桥能从发来的数据包中提取MAC信息，并且根据MAC信息对数据包进行有目的的转发，而不采用广播的方式，这样就能减少广播风暴的出现，提升整个网络的效率。但是它一般只有<strong>两个输入\\出口</strong>，要配合集线器使用，减少集线器(HUB)广播的数量来减少网络风暴的。后来随着硬件发展，出现了好多端口的链路层设备，这就是交换机，<strong>个人认为网桥已经被交换机替代了。</strong>(无线网桥除外)</p>","r":{"minutes":2,"words":599},"title":"网络设备","i":"edit"},["/posts/nw","/posts/nw.md"]],
  ["v-5f703944","/posts/osi%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B.html",{"y":"a","d":"2022-12-19T00:00:00.000Z","l":"2022年12月19日","c":["网络"],"g":["网络模型"],"e":"<h1> osi 7层网络模型</h1>\n<h2> 1.OSI的基本概念及原则</h2>\n<p>OSI是Open System Interconnect的缩写，意为开放式系统互联.<br>\n其各个层次的划分遵循下列原则：</p>\n<ul>\n<li>同一层中的各网络节点都有相同的层次结构，具有同样的功能。</li>\n<li>同一节点内相邻层之间通过接口进行通信。</li>\n<li>七层结构中的每一层使用下一层提供的服务，并且向其上层提供服务。</li>\n<li>不同节点的同等层按照协议实现对等层之间的通信。\n<img src=\"http://pan.zghtools.run:5244/d/Onedrive/图片/osi七层模型2.webp?sign=olHtV--ftkniCekedmqVr_1V4YsJIhlP22QMLwhJZDQ=:0\" alt=\"osi网络模型每层的协议\" loading=\"lazy\"></li>\n</ul>","r":{"minutes":5.7,"words":1711},"title":"osi 7层网络模型","i":"edit"},["/posts/osi七层模型.html","/posts/osi%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B","/posts/osi七层模型.md","/posts/osi%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B.md"]],
  ["v-0cf9168e","/posts/QObject%E5%AF%B9%E8%B1%A1%EF%BC%88The%20QObject%EF%BC%89.html",{"y":"a","d":"2023-09-09T00:00:00.000Z","l":"2023年9月9日","c":["Qt"],"e":"<h1> QObject对象（The QObject）</h1>\n<p>正如介绍中描述的，<code>QObject</code>是Qt的内省机制。在Qt中它几乎是所有类的基类。值类型除外，例如<code>QColor</code>，<code>QString</code>和<code>QList</code>。</p>\n<p>Qt对象是一个标准的C++对象，但是它具有更多的功能。可以从两个方向来深入探讨：内省和内存管理。内省意味着Qt对象知道它的类名，它与其它类的关系，以及它的方法和属性。内存管理意味着每个Qt对象都可以成为是其它子对象的父对象。父对象拥有子对象，当父对象销毁时，它也会负责销毁它的子对象。</p>","r":{"minutes":2.24,"words":671},"title":"QObject对象（The QObject）","i":"edit"},["/posts/QObject对象（The QObject）.html","/posts/QObject%E5%AF%B9%E8%B1%A1%EF%BC%88The%20QObject%EF%BC%89","/posts/QObject对象（The QObject）.md","/posts/QObject%E5%AF%B9%E8%B1%A1%EF%BC%88The%20QObject%EF%BC%89.md"]],
  ["v-1424428d","/posts/ssm%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.html",{"y":"a","d":"2022-12-19T00:00:00.000Z","l":"2022年12月19日","c":["spring"],"e":"<h1> ssm 数据库查询数据 在 浏览器上乱码问题</h1>\n<div class=\"language-java line-numbers-mode\" data-ext=\"java\"><pre class=\"language-java\"><code><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> produces <span class=\"token operator\">=</span> <span class=\"token string\">\"application/json; charset=utf-8\"</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div></div></div>","r":{"minutes":0.32,"words":97},"title":"ssm 数据库查询数据 在 浏览器上乱码问题","i":"edit"},["/posts/ssm数据库查询数据在浏览器上乱码问题.html","/posts/ssm%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98","/posts/ssm数据库查询数据在浏览器上乱码问题.md","/posts/ssm%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8A%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98.md"]],
  ["v-4369587f","/posts/%E5%86%B2%E7%AA%81%E5%9F%9F%E3%80%81%E5%B9%BF%E6%92%AD%E5%9F%9F.html",{"y":"a","d":"2022-12-19T00:00:00.000Z","l":"2022年12月19日","c":["网络"],"g":["冲突域","广播域"],"e":"<h1> 冲突域和广播域</h1>\n<h2> 冲突域</h2>\n<p>这个域代表了冲突在其中发生并传播的区域。在OSI模型中，冲突域被看作是第一层的概念。<br>\n用HUB(集线器)连接在一起的设备就在一个冲突域中，因为HUB是个半双工设备，同一时间只能有一台设备发送广播，如果有两台设备在这个域中同一时刻发送广播，那么就会发生冲突，所以叫冲突域。<br>\n而<strong>网桥、交换机(二层设备)，路由器(三层设备)，可以划分冲突域，也可以连接冲突域</strong></p>\n<h2> 广播域</h2>\n<p>接受同样广播消息的节点的集合。<br>\n网络中的广播就好像我们商场里的广播一样，你一开口，全商场的人都听到了。所能广播到的范围就是广播域。如果不维护广播域，就会消耗大量的带宽，降低网络的效率。<br>\n路由器可以分割广播域</p>","r":{"minutes":1.08,"words":323},"title":"冲突域和广播域","i":"edit"},["/posts/冲突域、广播域.html","/posts/%E5%86%B2%E7%AA%81%E5%9F%9F%E3%80%81%E5%B9%BF%E6%92%AD%E5%9F%9F","/posts/冲突域、广播域.md","/posts/%E5%86%B2%E7%AA%81%E5%9F%9F%E3%80%81%E5%B9%BF%E6%92%AD%E5%9F%9F.md"]],
  ["v-a6ac369e","/posts/Linux/linux%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1(service%E6%96%87%E4%BB%B6).html",{"y":"a","d":"2022-02-19T00:00:00.000Z","l":"2022年2月19日","c":["Linux"],"g":["技巧"],"e":"<h1> Linux添加自定义服务</h1>\n<h2> Linux系统中也有“服务”这一说法，通过服务我们可以便捷地管理一些程序功能，也可以作为程序开机自启的一个手段之一</h2>\n<h3> 每一个服务在Linux有它自己的对应的配置文件，这个文件可以通过文本编辑器编辑，扩展名为xxx.servive（xxx为服务名称）。这些文件位于/usr/lib/systemd/system目录下。</h3>\n<div class=\"language-text line-numbers-mode\" data-ext=\"text\"><pre class=\"language-text\"><code>[Unit]\nDescription=服务描述\nAfter=服务依赖（再这些服务后启动本服务）\n \n[Service]\nType=服务类型\nExecStart=启动命令\nExecStop=终止命令\nExecReload=重启命令\n \n[Install]\nWantedBy=服务安装设置\n</code></pre><div class=\"line-numbers\" aria-hidden=\"true\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","r":{"minutes":0.6,"words":179},"title":"Linux添加自定义服务","i":"edit"},["/posts/Linux/linux添加自定义服务(service文件).html","/posts/Linux/linux%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1(service%E6%96%87%E4%BB%B6)","/posts/Linux/linux添加自定义服务(service文件).md","/posts/Linux/linux%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1(service%E6%96%87%E4%BB%B6).md"]],
  ["v-a6e6d3b0","/posts/Linux/Linux%E8%BF%9B%E7%A8%8B.html",{"y":"a","d":"2022-12-12T00:00:00.000Z","l":"2022年12月12日","c":["Linux"],"g":["进程"],"e":"<h1> Linux 进程</h1>\n<ul>\n<li>进程(process)是指正在执行的程序；是程序正在运行的一个实例。它由程序指令，和从文件、其它程序中读取的数据或系统用户的输入组成。</li>\n<li>每个用户都可以运行多个程序，为了区分每一个程序，Linux给每个进程都做了标识，称为进程号(process ID)，每个进程号是唯一的。<em>在/proc目录，存储有当前内核运行状态的一些特殊文件，其中就有进程号信息。</em></li>\n<li>进程可以被分为\n<ul>\n<li>父进程(PID) 这些是在运行时创建其它进程的进程。</li>\n<li>子进程(PPID) 这些是在运行时由其它进程创建的进程。</li>\n</ul>\n</li>\n</ul>","r":{"minutes":3.79,"words":1137},"title":"Linux 进程","i":"edit"},["/posts/Linux/Linux进程.html","/posts/Linux/Linux%E8%BF%9B%E7%A8%8B","/posts/Linux/Linux进程.md","/posts/Linux/Linux%E8%BF%9B%E7%A8%8B.md"]],
  ["v-35d94e09","/posts/Linux/ps%E6%8C%87%E4%BB%A4.html",{"y":"a","d":"2022-12-13T00:00:00.000Z","l":"2022年12月13日","c":["Linux"],"g":["指令"],"e":"<h1> 进程管理指令</h1>\n<h2> ps [OPTION]</h2>\n<ul>\n<li>选项\n<ul>\n<li>a 显示与终端有关的进程</li>\n<li>x 显示与终端无关联的进程</li>\n<li>u 显示进程更详细的信息</li>\n<li>f 用树状结构显示进程的关系</li>\n<li>o 显示特定的内容(pid,tty...)</li>\n<li>k 对属性排序，在要排序的属性前加-,表示倒序</li>\n<li>L 表示ps支持的所有属性</li>\n</ul>\n</li>\n</ul>\n<h2> uptime</h2>\n<p>显示当前时间，系统已启动的时间、当前上线人数，系统平均负载(1、5、10分钟的平均负载，一般不会超过1)</p>","r":{"minutes":0.86,"words":259},"title":"进程管理指令","i":"edit"},["/posts/Linux/ps指令.html","/posts/Linux/ps%E6%8C%87%E4%BB%A4","/posts/Linux/ps指令.md","/posts/Linux/ps%E6%8C%87%E4%BB%A4.md"]],
  ["v-3706649a","/404.html",{"title":""},["/404"]],
  ["v-5bc93818","/category/",{"title":"分类"},["/category/index.html"]],
  ["v-744d024e","/tag/",{"title":"标签"},["/tag/index.html"]],
  ["v-e52c881c","/article/",{"title":"文章"},["/article/index.html"]],
  ["v-75ed4ea4","/encrypted/",{"title":"加密"},["/encrypted/index.html"]],
  ["v-d804e652","/slide/",{"title":"幻灯片"},["/slide/index.html"]],
  ["v-154dc4c4","/star/",{"title":"收藏"},["/star/index.html"]],
  ["v-01560935","/timeline/",{"title":"时间轴"},["/timeline/index.html"]],
  ["v-03d57386","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{"title":"使用指南 分类"},["/category/使用指南/","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/index.html"]],
  ["v-83e1f92e","/tag/%E7%A6%81%E7%94%A8/",{"title":"禁用 标签"},["/tag/禁用/","/tag/%E7%A6%81%E7%94%A8/index.html"]],
  ["v-e348c378","/category/c/",{"title":"c 分类"},["/category/c/index.html"]],
  ["v-1e447d61","/tag/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/",{"title":"文章加密 标签"},["/tag/文章加密/","/tag/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/index.html"]],
  ["v-5ff6b5a3","/category/%E7%BD%91%E7%BB%9C/",{"title":"网络 分类"},["/category/网络/","/category/%E7%BD%91%E7%BB%9C/index.html"]],
  ["v-484552dc","/tag/markdown/",{"title":"Markdown 标签"},["/tag/markdown/index.html"]],
  ["v-39eb2fea","/category/esp8266/",{"title":"esp8266 分类"},["/category/esp8266/index.html"]],
  ["v-a378ad66","/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{"title":"页面配置 标签"},["/tag/页面配置/","/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/index.html"]],
  ["v-2577ed03","/category/%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/",{"title":"管理工具 分类"},["/category/管理工具/","/category/%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/index.html"]],
  ["v-7b167472","/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{"title":"使用指南 标签"},["/tag/使用指南/","/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/index.html"]],
  ["v-50a31959","/category/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/",{"title":"网络设备 分类"},["/category/网络设备/","/category/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/index.html"]],
  ["v-3f71e568","/tag/cmake/",{"title":"cmake 标签"},["/tag/cmake/index.html"]],
  ["v-3d186754","/category/qt/",{"title":"Qt 分类"},["/category/qt/index.html"]],
  ["v-1e661331","/tag/%E5%86%B2%E7%AA%81%E5%9F%9F/",{"title":"冲突域 标签"},["/tag/冲突域/","/tag/%E5%86%B2%E7%AA%81%E5%9F%9F/index.html"]],
  ["v-08073caa","/category/spring/",{"title":"spring 分类"},["/category/spring/index.html"]],
  ["v-37397134","/tag/%E5%B9%BF%E6%92%AD%E5%9F%9F/",{"title":"广播域 标签"},["/tag/广播域/","/tag/%E5%B9%BF%E6%92%AD%E5%9F%9F/index.html"]],
  ["v-9c48d85a","/category/linux/",{"title":"Linux 分类"},["/category/linux/index.html"]],
  ["v-b310d42a","/tag/git/",{"title":"git 标签"},["/tag/git/index.html"]],
  ["v-2d8ab71c","/tag/https/",{"title":"https 标签"},["/tag/https/index.html"]],
  ["v-094082c0","/tag/%E5%8D%8F%E8%AE%AE/",{"title":"协议 标签"},["/tag/协议/","/tag/%E5%8D%8F%E8%AE%AE/index.html"]],
  ["v-af57fbf6","/tag/%E7%BD%91%E5%85%B3/",{"title":"网关 标签"},["/tag/网关/","/tag/%E7%BD%91%E5%85%B3/index.html"]],
  ["v-1f586af4","/tag/%E7%BD%91%E6%A1%A5/",{"title":"网桥 标签"},["/tag/网桥/","/tag/%E7%BD%91%E6%A1%A5/index.html"]],
  ["v-557bef05","/tag/%E4%BA%A4%E6%8D%A2%E6%9C%BA/",{"title":"交换机 标签"},["/tag/交换机/","/tag/%E4%BA%A4%E6%8D%A2%E6%9C%BA/index.html"]],
  ["v-4524cf49","/tag/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/",{"title":"网络模型 标签"},["/tag/网络模型/","/tag/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/index.html"]],
  ["v-b7d62b20","/tag/%E6%8A%80%E5%B7%A7/",{"title":"技巧 标签"},["/tag/技巧/","/tag/%E6%8A%80%E5%B7%A7/index.html"]],
  ["v-7f316c34","/tag/%E8%BF%9B%E7%A8%8B/",{"title":"进程 标签"},["/tag/进程/","/tag/%E8%BF%9B%E7%A8%8B/index.html"]],
  ["v-12cb3644","/tag/%E6%8C%87%E4%BB%A4/",{"title":"指令 标签"},["/tag/指令/","/tag/%E6%8C%87%E4%BB%A4/index.html"]],
]
